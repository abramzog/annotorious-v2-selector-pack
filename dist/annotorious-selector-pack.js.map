{"version":3,"file":"annotorious-selector-pack.js","mappings":"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","sources":["webpack://Annotorious.SelectorPack/webpack/universalModuleDefinition","webpack://Annotorious.SelectorPack/./node_modules/fast-deep-equal/index.js","webpack://Annotorious.SelectorPack/./node_modules/tiny-emitter/index.js","webpack://Annotorious.SelectorPack/webpack/bootstrap","webpack://Annotorious.SelectorPack/webpack/runtime/compat get default export","webpack://Annotorious.SelectorPack/webpack/runtime/define property getters","webpack://Annotorious.SelectorPack/webpack/runtime/hasOwnProperty shorthand","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/rng.js","webpack://Annotorious.SelectorPack/./node_modules/@abramzog/annotorious/src/util/SVG.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/regex.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/validate.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/v4.js","webpack://Annotorious.SelectorPack/./node_modules/@abramzog/recogito-client-core/src/WebAnnotation.js","webpack://Annotorious.SelectorPack/./node_modules/@abramzog/recogito-client-core/src/Selection.js","webpack://Annotorious.SelectorPack/./node_modules/@abramzog/annotorious/src/tools/Tool.js","webpack://Annotorious.SelectorPack/./node_modules/@abramzog/annotorious/src/util/Touch.js","webpack://Annotorious.SelectorPack/./node_modules/@abramzog/annotorious/src/tools/EditableShape.js","webpack://Annotorious.SelectorPack/./node_modules/@abramzog/annotorious/src/selectors/RectFragment.js","webpack://Annotorious.SelectorPack/./src/point/Point.js","webpack://Annotorious.SelectorPack/./src/point/EditablePoint.js","webpack://Annotorious.SelectorPack/./src/point/PointTool.js","webpack://Annotorious.SelectorPack/./node_modules/@abramzog/annotorious/src/selectors/EmbeddedSVG.js","webpack://Annotorious.SelectorPack/./src/circle/Circle.js","webpack://Annotorious.SelectorPack/./src/circle/CircleMask.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircle.js","webpack://Annotorious.SelectorPack/./node_modules/@abramzog/annotorious/src/util/Formatting.js","webpack://Annotorious.SelectorPack/./src/circle/EditableCircle.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircleTool.js","webpack://Annotorious.SelectorPack/./src/ellipse/Ellipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EllipseMask.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EditableEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipseTool.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/EditableFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehandTool.js","webpack://Annotorious.SelectorPack/./node_modules/@abramzog/annotorious/src/tools/polygon/PolygonMask.js","webpack://Annotorious.SelectorPack/./src/multipolygon/RubberbandMultipolygon.js","webpack://Annotorious.SelectorPack/./src/multipolygon/EditableMultipolygon.js","webpack://Annotorious.SelectorPack/./src/multipolygon/RubberbandMultipolygonTool.js","webpack://Annotorious.SelectorPack/./src/line/LineMask.js","webpack://Annotorious.SelectorPack/./src/line/RubberbandLine.js","webpack://Annotorious.SelectorPack/./src/line/EditableLine.js","webpack://Annotorious.SelectorPack/./src/line/RubberbandLineTool.js","webpack://Annotorious.SelectorPack/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Annotorious\"] = factory();\n\telse\n\t\troot[\"Annotorious\"] = root[\"Annotorious\"] || {}, root[\"Annotorious\"][\"SelectorPack\"] = factory();\n})(self, () => {\nreturn ","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nconst getClassNames = el => {\n  const attr = el.getAttribute('class');\n  return attr ? new Set(attr.split(' ')) : new Set();\n}\n\n// IE11 doesn't support adding/removing classes to SVG elements except \n// via .setAttribute\nexport const addClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.add(className);\n  el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const removeClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.delete(className);\n\n  if (classNames.size === 0)\n    el.removeAttribute('class');\n  else\n    el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const hasClass = (el, className) =>\n  getClassNames(el).has(className);","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\nexport default class WebAnnotation {\n\n  constructor(annotation, opts) {\n    this.underlying = annotation;\n    this.opts = opts;\n  }\n\n  /** For convenience - creates an empty web annotation **/\n  static create = args => {\n    const stub = {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`,\n      'body': []\n    };\n\n    return new WebAnnotation({ ...stub, ...args });\n  }\n\n  /** Creates a copy of this annotation **/\n  clone = (opt_props, opt_opts) => {\n    return new WebAnnotation({ ...this.underlying, ...opt_props}, { ...this.opts, ...opt_opts });\n  }\n\n  /** An equality check based on the underlying object **/\n  isEqual(other) {\n    if (other?.type !== 'Annotation') {\n      return false;\n    } else if (this.underlying === other.underlying) {\n      return true;\n    } else if (!this.underlying.id || !other.underlying.id) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n\n  get readOnly() {\n    return this.opts?.readOnly;\n  }\n\n  /*************************************/\n  /* Getters to forward properties of  */\n  /* the underlying annotation         */\n  /*************************************/\n\n  get id() {\n    return this.underlying.id;\n  }\n\n  get context() {\n    return this.underlying['@context'];\n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get motivation() {\n    return this.underlying.motivation;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  /** Same as .body, but guaranteed to return an array **/\n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  /** Only bodies are meant to be mutated by the application **/\n  set bodies(bodies) {\n    this.underlying.body = bodies;\n  }\n\n  /** Same as .target, but guaranteed to return an array **/\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n\n  /*****************************************/\n  /* Various access helpers and shorthands */\n  /*****************************************/\n\n  /** Selector of the given type **/\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector')?.exact;\n  }\n\n  /** Shorthand for the 'start' field of the TextPositionSelector **/\n  get start() {\n    return this.selector('TextPositionSelector')?.start;\n  }\n\n  /** Shorthand for the 'end' field of the TextPositionSelector **/\n  get end() {\n    return this.selector('TextPositionSelector')?.end;\n  }\n\n}\n","import WebAnnotation from './WebAnnotation';\nimport { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\n/**\n * An \"annotation in draft mode\". Really the same\n * data structure, but as a separate class so we can\n * tell things apart properly.\n */\nexport default class Selection {\n\n  constructor(target, body) {\n    this.underlying = {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      type: 'Selection',\n      body: body || [],\n      target\n    }\n  }\n\n  /** Creates a copy of this selection **/\n  clone = opt_props => {\n    // Deep-clone\n    const cloned = new Selection();\n    cloned.underlying = JSON.parse(JSON.stringify(this.underlying));\n\n    if (opt_props)\n      cloned.underlying = { ...cloned.underlying, ...opt_props };\n\n    return cloned;\n  }\n\n  get context() {\n    return this.underlying['@context'];\n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n\n  /** For consistency with WebAnnotation **/\n  isEqual(other) {\n    if (!other) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n\n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector')?.exact;\n  }\n\n  /*******************************************/\n  /* Selection-specific properties & methods */\n  /*******************************************/\n\n  get isSelection() {\n    return true;\n  }\n\n  toAnnotation = () => {\n    const a = Object.assign({}, this.underlying, {\n      'type': 'Annotation',\n      'id': `#${uuid()}`\n    });\n\n    return new WebAnnotation(a);\n  }\n\n}\n","import EventEmitter from 'tiny-emitter';\nimport { isTouchDevice } from '../util/Touch';\nimport { SVG_NAMESPACE } from '../util/SVG';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nconst isTouch = isTouchDevice();\n\n/**\n * A commmon base class for Tools and EditableShapes\n */\nexport class ToolLike extends EventEmitter {\n\n  constructor(g, config, env) {\n    super();\n\n    this.svg = g.closest('svg');\n\n    this.g = g;\n    this.config = config;\n    this.env = env;\n\n    // Default image scale\n    this.scale = 1;\n\n    // Bit of a hack. If we are dealing with a 'real' image, we enable\n    // reponsive mode. OpenSeadragon handles scaling in a different way,\n    // so we don't need responsive mode.\n    const { image } = env;\n    if (image instanceof Element || image instanceof HTMLDocument)\n      this.enableResponsive();\n  }\n\n  /**\n   * Implementations MAY extend this (calling super),\n   * to destroy SVG elements, mask, etc.\n   */\n  destroy() {\n    if (this.resizeObserver)\n      this.resizeObserver.disconnect();\n\n    this.resizeObserver = null;\n  }\n\n  enableResponsive = () => {\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        const svgBounds = this.svg.getBoundingClientRect();\n        const { width, height } = this.svg.viewBox.baseVal;\n\n        this.scale = Math.max(\n          width / svgBounds.width,\n          height / svgBounds.height\n        );\n\n        if (this.onScaleChanged)\n          this.onScaleChanged(this.scale);\n      });\n\n      this.resizeObserver.observe(this.svg.parentNode);\n    }\n  }\n\n  getSVGPoint = evt => {\n    const pt = this.svg.createSVGPoint();\n\n    if (isTouch) {\n      const bbox = this.svg.getBoundingClientRect();\n\n      const x = evt.clientX - bbox.x;\n      const y = evt.clientY - bbox.y;\n\n      const { left, top } = this.svg.getBoundingClientRect();\n      pt.x = x + left;\n      pt.y = y + top;\n\n      return pt.matrixTransform(this.g.getScreenCTM().inverse());\n    } else {\n      pt.x = evt.offsetX;\n      pt.y = evt.offsetY;\n\n      return pt.matrixTransform(this.g.getCTM().inverse());\n    }\n  }\n\n  /*********************************/\n  /*  Helpers for drawing handles  */\n  /*********************************/\n\n  drawHandle = (x, y) => {\n    const containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    containerGroup.setAttribute('class', 'a9s-handle');\n\n    const group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    const drawCircle = r => {\n      const c = document.createElementNS(SVG_NAMESPACE, 'circle');\n      c.setAttribute('cx', x);\n      c.setAttribute('cy', y);\n      c.setAttribute('r', r);\n      c.setAttribute('transform-origin', `${x} ${y}`);\n      return c;\n    }\n\n    const radius = this.config.handleRadius || 6;\n\n    const inner = drawCircle(radius);\n    inner.setAttribute('class', 'a9s-handle-inner')\n\n    const outer = drawCircle(radius + 1);\n    outer.setAttribute('class', 'a9s-handle-outer')\n\n    group.appendChild(outer);\n    group.appendChild(inner);\n\n    containerGroup.appendChild(group);\n    return containerGroup;\n  }\n\n  setHandleXY = (handle, x, y) => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    inner.setAttribute('cx', x);\n    inner.setAttribute('cy', y);\n    inner.setAttribute('transform-origin', `${x} ${y}`);\n\n    const outer = handle.querySelector('.a9s-handle-outer');\n    outer.setAttribute('cx', x);\n    outer.setAttribute('cy', y);\n    outer.setAttribute('transform-origin', `${x} ${y}`);\n  }\n\n  getHandleXY = handle => {\n    const outer = handle.querySelector('.a9s-handle-outer');\n    return {\n      x: parseFloat(outer.getAttribute('cx')),\n      y: parseFloat(outer.getAttribute('cy'))\n    }\n  }\n\n  scaleHandle = handle => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    const outer = handle.querySelector('.a9s-handle-outer');\n\n    const radius = this.scale * (this.config.handleRadius || 6);\n\n    inner.setAttribute('r', radius);\n    outer.setAttribute('r', radius);\n  }\n\n}\n\n/**\n * Base class that adds some convenience stuff for tool plugins.\n */\nexport default class Tool extends ToolLike {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    // We'll keep a flag set to false until\n    // the user has started moving, so we can\n    // fire the startSelection event\n    this.started = false;\n  }\n\n  attachListeners = ({ mouseMove, mouseUp, dblClick }) => {\n    // Handle SVG conversion on behalf of tool implementations\n    if (mouseMove) {\n      this.mouseMove = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n\n        if (!this.started) {\n          this.emit('startSelection', { x, y });\n          this.started = true;\n        }\n\n        mouseMove(x, y, evt);\n      }\n\n      // Mouse move goes on SVG element\n      this.svg.addEventListener('mousemove', this.mouseMove);\n    }\n\n    if (mouseUp) {\n      this.mouseUp = evt => {\n        if (evt.button !== 0) return;  // left click\n        const { x , y } = this.getSVGPoint(evt);\n        mouseUp(x, y, evt);\n      }\n\n      // Mouse up goes on doc, so we capture events outside, too\n      document.addEventListener('mouseup', this.mouseUp);\n    }\n\n    if (dblClick) {\n      this.dblClick = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n        dblClick(x, y, evt);\n      }\n\n      document.addEventListener('dblclick', this.dblClick);\n    }\n\n  }\n\n  detachListeners = () => {\n    if (this.mouseMove)\n      this.svg.removeEventListener('mousemove', this.mouseMove);\n\n    if (this.mouseUp)\n      document.removeEventListener('mouseup', this.mouseUp);\n\n    if (this.dblClick)\n      document.removeEventListener('dblclick', this.dblClick);\n  }\n\n  /**\n   * If startOnSingleClick is true, the tool starts on single click\n   * as well as drag. If false, starting strictly requires drag!\n   */\n  start = (evt, startOnSingleClick) => {\n    // Handle SVG conversion on behalf of tool implementations\n    const { x , y } = this.getSVGPoint(evt);\n    this.startDrawing(x, y, startOnSingleClick, evt);\n  }\n\n  /**\n   * Tool implementations MUST override these\n   */\n\n  get isDrawing() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  startDrawing = evt => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  createEditableShape = (annotation, formatters) => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n\n// In addition, Tool implementations need to implement the following static methods\n\n// Tool.identifier = '...'\n\nTool.supports = annotation => {\n  throw new Error(IMPLEMENTATION_MISSING);\n}\n\n// Just some convenience shortcuts to client-core, for quicker\n// importing in plugins. (In a way, the intention is to make the\n// Tool class serve as a kind of mini-SDK).\nexport { default as Selection } from '@abramzog/recogito-client-core/src/Selection';\nexport { default as WebAnnotation } from '@abramzog/recogito-client-core/src/WebAnnotation';\n","const SIM_EVENTS = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup'\n}\n\nexport const isTouchDevice = () =>\n  'ontouchstart' in window ||\n    navigator.maxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0;\n\nexport const enableTouchTranslation = el => {\n\n  let pressAndHoldTrigger = null;\n\n  const simulateEvent = (type, e) => new MouseEvent(type, {\n    screenX: e.screenX,\n    screenY: e.screenY,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    bubbles: true\n  });\n\n  const touchHandler = evt => {\n    const touch = evt.changedTouches[0];\n    const simulatedEvent = simulateEvent(SIM_EVENTS[evt.type], touch);\n\n    touch.target.dispatchEvent(simulatedEvent);\n    evt.preventDefault();\n\n    if (evt.type === 'touchstart' || evt.type === 'touchmove') {\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n\n      pressAndHoldTrigger = setTimeout(() => {\n        const simulatedEvent = simulateEvent('dblclick', touch);\n        touch.target.dispatchEvent(simulatedEvent);\n      }, 800);\n    }\n\n    if (evt.type === 'touchend')\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n  }\n\n  el.addEventListener('touchstart', touchHandler, true);\n  el.addEventListener('touchmove', touchHandler, true);\n  el.addEventListener('touchend', touchHandler, true);\n  el.addEventListener('touchcancel', touchHandler, true);\n\n}","import { ToolLike } from './Tool';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nexport default class EditableShape extends ToolLike {\n\n  constructor(annotation, g, config, env) {\n    super(g, config, env);\n\n    this.annotation = annotation;\n  }\n  \n  /**\n   * Implementations MUST override this method!\n   * \n   * Must return the 'g' element with the a9s-annotation class.\n   */\n  get element() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  /**\n   * Implementations MUST override this method!\n   * \n   * The annotation argument MUST be used to update\n   * the current state of the shape. It MUST NOT\n   * be stored as 'this.annotation'! 'this.annotation'\n   * MUST remain the original annotation at the time\n   * this EditableShape was created, because we will\n   * need it again in case the user cancels editing.\n   * \n   * Thinking of it in React terms, 'this.annotation'\n   * has the same purpose as props.annotation, whereas\n   * this method affects state.\n   */\n  updateState = annotation => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n","import { SVG_NAMESPACE, addClass } from '../util/SVG';\n\n/** \n * Parses a W3C Web Annotation FragmentSelector conforming\n * to the Media Fragments spec. Supports (well-formed) xywh=pixel\n * and xywh=percent fragments. \n */\nexport const parseRectFragment = (annotation, image) => {\n  const selector = annotation.selector('FragmentSelector');\n\n  if (selector?.conformsTo.startsWith('http://www.w3.org/TR/media-frags')) {\n    const { value } = selector;\n  \n    const format = value.includes(':') ? value.substring(value.indexOf('=') + 1, value.indexOf(':')) : 'pixel';\n    const coords = value.includes(':') ? value.substring(value.indexOf(':') + 1) : value.substring(value.indexOf('=') + 1);\n\n    let [ x, y, w, h ] = coords.split(',').map(parseFloat);\n\n    if (format.toLowerCase() === 'percent') {\n      x = x * image.naturalWidth  / 100;\n      y = y * image.naturalHeight / 100;\n      w = w * image.naturalWidth  / 100;\n      h = h * image.naturalHeight / 100;\n    }\n\n    return { x, y, w, h };\n  }\n}\n\n/** \n * Serializes a (x, y, w, h)-tuple as Media Fragment selector\n * using pixel coordinates.\n */\nconst toPixelRectFragment = (x, y, w, h, image) => ({\n  source: image?.src,\n  selector: {\n    type: \"FragmentSelector\",\n    conformsTo: \"http://www.w3.org/TR/media-frags/\",\n    value: `xywh=pixel:${x},${y},${w},${h}`\n  }\n});\n\n/** \n * Serializes a (x, y, w, h)-tuple as Media Fragment selector \n * using percent coordinates.\n */\nconst toPercentRectFragment = (x, y, w, h, image) => {\n  const px = x / image.naturalWidth  * 100;\n  const py = y / image.naturalHeight * 100;\n  const pw = w / image.naturalWidth  * 100;\n  const ph = h / image.naturalHeight * 100;\n\n  return {\n    source: image.src,\n    selector: {\n      type: \"FragmentSelector\",\n      conformsTo: \"http://www.w3.org/TR/media-frags/\",\n      value: `xywh=percent:${px},${py},${pw},${ph}`\n    }\n  }\n}\n\nexport const toRectFragment = (x, y, w, h, image, fragmentUnit) =>\n  fragmentUnit?.toLowerCase() === 'percent' ?\n    toPercentRectFragment(x, y, w, h, image) :\n    toPixelRectFragment(x, y, w, h, image);\n\n/** Shorthand to apply the given (x, y, w, h) to the SVG shape **/\nconst setXYWH = (shape, x, y, w, h) => {\n  shape.setAttribute('x', x);\n  shape.setAttribute('y', y);\n  shape.setAttribute('width', w);\n  shape.setAttribute('height', h);\n}\n\n\nconst setPointXY = (shape, x, y) => {\n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', 7); // TODO make configurable\n}\n\nexport const drawRectMask = (imageDimensions, x, y, w, h) => {\n  const mask = document.createElementNS(SVG_NAMESPACE, 'path');\n  mask.setAttribute('fill-rule', 'evenodd');\n\n  const { naturalWidth, naturalHeight } = imageDimensions;\n  mask.setAttribute('d', `M0 0 h${naturalWidth} v${naturalHeight} h-${naturalWidth} z M${x} ${y} h${w} v${h} h-${w} z`);\n\n  return mask;\n}\n\nexport const setRectMaskSize = (mask, imageDimensions, x, y, w, h) => {\n  const { naturalWidth, naturalHeight } = imageDimensions;\n  mask.setAttribute('d', `M0 0 h${naturalWidth} v${naturalHeight} h-${naturalWidth} z M${x} ${y} h${w} v${h} h-${w} z`);\n}\n\n/** \n * Draws an SVG rectangle, either from an annotation, or an\n * (x, y, w, h)-tuple.\n */\nexport const drawRect = (arg1, arg2, arg3, arg4) => {\n  const { x, y, w, h } = arg1.type === 'Annotation' || arg1.type === 'Selection' ?\n    parseRectFragment(arg1, arg2) : { x: arg1, y: arg2, w: arg3, h: arg4 };\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  if (w === 0 && h === 0) {\n    // Edge case: rect is actually a point\n    addClass(g, 'a9s-point');\n    addClass(g, 'a9s-non-scaling');\n    g.setAttribute('transform-origin', `${x} ${y}`);\n\n    const outerPoint  = document.createElementNS(SVG_NAMESPACE, 'circle');\n    const innerPoint  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n    innerPoint.setAttribute('class', 'a9s-inner');\n    setPointXY(innerPoint, x, y);\n\n    outerPoint.setAttribute('class', 'a9s-outer');\n    setPointXY(outerPoint, x, y);\n\n    g.appendChild(outerPoint);\n    g.appendChild(innerPoint);  \n  } else {\n    const outerRect = document.createElementNS(SVG_NAMESPACE, 'rect');\n    const innerRect = document.createElementNS(SVG_NAMESPACE, 'rect');\n\n    innerRect.setAttribute('class', 'a9s-inner');\n    setXYWH(innerRect, x, y, w, h);\n\n    outerRect.setAttribute('class', 'a9s-outer');\n    setXYWH(outerRect, x, y, w, h);\n\n    g.appendChild(outerRect);\n    g.appendChild(innerRect);\n  }\n\n  return g;\n}\n\n/** Gets the (x, y, w, h)-values from the attributes of the SVG group **/\nexport const getRectSize = g => {\n  const outer = g.querySelector('.a9s-outer');\n\n  if (outer.nodeName === 'rect') {\n    const x = parseFloat(outer.getAttribute('x'));\n    const y = parseFloat(outer.getAttribute('y'));\n    const w = parseFloat(outer.getAttribute('width'));\n    const h = parseFloat(outer.getAttribute('height'));\n\n    return { x, y, w, h };\n  } else {\n    const x = parseFloat(outer.getAttribute('cx'));\n    const y = parseFloat(outer.getAttribute('cy'));\n\n    return { x, y, w: 0, h: 0 };\n  }\n}\n\n/** Applies the (x, y, w, h)-values to the rects in the SVG group **/\nexport const setRectSize = (g, x, y, w, h) => {\n  const inner = g.querySelector('.a9s-inner');\n  const outer = g.querySelector('.a9s-outer');\n\n  if (outer.nodeName === 'rect') {\n    setXYWH(inner, x, y, w, h);\n    setXYWH(outer, x, y, w, h);  \n  } else {\n    setPointXY(inner, x, y);\n    setPointXY(outer, x, y);\n  }\n}\n\n/** \n * Shorthand to get the area (rectangle w x h) from the \n * annotation's fragment selector. \n */\nexport const rectArea = (annotation, image) => {\n  const { w, h } = parseRectFragment(annotation, image);\n  return w * h;\n}\n\n","import { toRectFragment } from '@abramzog/annotorious/src/selectors/RectFragment';\n\nexport const isPoint = annotation =>\n  annotation.target.renderedVia?.name === 'point';\n\nexport const toFragment = (x, y, image, fragmentUnit) => ({\n  ...toRectFragment(x, y, 0, 0, image, fragmentUnit),\n  renderedVia: {\n    name: 'point'\n  }\n});","import EditableShape from '@abramzog/annotorious/src/tools/EditableShape';\nimport { parseRectFragment } from '@abramzog/annotorious/src/selectors/RectFragment';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport { toFragment } from './Point';\n\nexport default class EditablePoint extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    const { x, y } = parseRectFragment(annotation, env.image);\n\n    this.container = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n\n    this.point = this.drawHandle(x, y);\n    this.point.addEventListener('mousedown', this.onGrab);\n    \n    this.elementGroup.appendChild(this.point);\n\n    this.container.appendChild(this.elementGroup);\n    g.appendChild(this.container);\n\n    // true if te mouse has grabbed the point\n    this.isGrabbed = false;\n  }\n\n  onScaleChanged = () => \n    this.scaleHandle(this.point);\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  onGrab = () => {\n    this.isGrabbed = true;\n  }\n\n  onMouseMove = evt => {\n    if (evt.button !== 0) return;  // left click\n\n    if (this.isGrabbed) {\n      const {x, y} = this.getSVGPoint(evt);\n\n      this.setHandleXY(this.point, x, y);\n\n      const target = toFragment(x, y, this.env.image, this.config.fragmentUnit);\n      this.emit('update', target);\n    }\n  }\n\n  onMouseUp = () => {\n    this.isGrabbed = false;\n  }\n\n  updateState = annotation => {\n    const { x, y } = parseRectFragment(annotation, this.env.image);\n    this.setHandleXY(this.point, x, y);\n  }\n\n  destroy() {\n    this.svg.removeEventListener('mousemove', this.onMouseMove);\n    this.svg.removeEventListener('mouseup', this.onMouseUp);\n\n    this.container.parentNode.removeChild(this.container);\n    super.destroy();\n  }\n\n}","import Tool, { Selection } from '@abramzog/annotorious/src/tools/Tool';\nimport EditablePoint from './EditablePoint';\nimport { toFragment, isPoint } from './Point';\n\nexport default class PointTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n  }\n\n  startDrawing = (x, y, _, evt) => {\n    // The top-most existing annotation at this position (if any) \n    const annotation = evt.target.closest('.a9s-annotation')?.annotation;\n\n    // The point drawing tool will ALWAYS create a point annotation,\n    // regardless of whether there's already an annotation underneath.\n    // UNLESS the annotation underneath is itself a point!\n    if (!annotation || !isPoint(annotation)) {\n      const element = this.drawHandle(x, y);\n      this.scaleHandle(element);\n\n      this.g.appendChild(element);\n\n      element.annotation = new Selection(toFragment(x, y, this.env.image, this.config.fragmentUnit));\n\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel')\n    }\n  }\n\n  stop = () => {\n    // Nothing to do\n  }\n\n  get isDrawing() {\n    // Point selection is an instant action - the\n    // tool is never an 'drawing' state\n    return false;\n  }\n  \n  createEditableShape = annotation =>\n    new EditablePoint(annotation, this.g, this.config, this.env);\n\n}\n\nPointTool.identifier = 'point';\n\nPointTool.supports = annotation => {\n  // Not needed, since the target.renderedVia property will be evaluated first\n  return false;\n}","import { SVG_NAMESPACE } from '../util/SVG';\nimport { polygonArea, polygonInPolygon, svgPathToPolygons } from '../util/Geom2D';\n\n/** Helper that forces an un-namespaced node to SVG **/\nconst insertSVGNamespace = originalDoc => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n\nconst sanitize = doc => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = el => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n  Array.from(scripts).reverse().forEach(el =>\n    el.parentNode.removeChild(el));\n\n  // Remove on... attributes\n  cleanEl(doc);\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\nexport const svgFragmentToShape = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector) {\n    const parser = new DOMParser();\n\n    // Parse the XML document, assuming SVG\n    const { value } = selector;\n    const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n    // SVG needs a namespace declaration - check if it's set or insert if not\n    const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n    const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n    if (isPrefixDeclared || isDefaultNamespaceSVG) {\n      return sanitize(doc).firstChild;\n    } else {\n      return sanitize(insertSVGNamespace(doc)).firstChild;\n    }\n  }\n}\n\nexport const drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n\nexport const toSVGTarget = (shape, image) => {\n  const inner = shape.querySelector('.a9s-inner').cloneNode(true);\n  inner.removeAttribute('class');\n  inner.removeAttribute('xmlns');\n\n  let serialized = inner.outerHTML || new XMLSerializer().serializeToString(inner);\n  serialized = serialized.replace(` xmlns=\"${SVG_NAMESPACE}\"`, '');\n\n  return {\n    source: image?.src,\n    selector: {\n      type: \"SvgSelector\",\n      value: `<svg>${serialized}</svg>`\n    }\n  }\n}\n\nexport const svgArea = annotation => {\n  const shape = svgFragmentToShape(annotation);\n  const nodeName = shape.nodeName.toLowerCase();\n\n  if (nodeName === 'polygon') \n    return svgPolygonArea(shape);\n  else if (nodeName === 'circle')\n    return svgCircleArea(shape);\n  else if (nodeName === 'ellipse')\n    return svgEllipseArea(shape);\n  else if (nodeName == 'path')\n    return svgPathArea(shape);\n  else if (nodeName == 'line')\n    return 0;\n  else\n    throw `Unsupported SVG shape type: ${nodeName}`;\n}\n\nconst svgPolygonArea = polygon => {\n  const points = polygon.getAttribute('points')\n    .trim()\n    .split(' ') // Split x/y tuples\n    .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n\n  return polygonArea(points)\n}\n\nconst svgCircleArea = circle => {\n  const r = circle.getAttribute('r');\n  return r * r * Math.PI;\n}\n\nconst svgEllipseArea = ellipse => {\n  const rx = ellipse.getAttribute('rx');\n  const ry = ellipse.getAttribute('ry');\n  return rx * ry * Math.PI;\n}\n\nconst svgPathArea = path => {\n  const polygons = svgPathToPolygons(path);\n\n  if (polygons.length == 1) {\n    return polygonArea(polygons[0]);\n  } else {\n    // Helper to check if a polygon is a hole\n    const isHole = p => polygons.find(other => {\n      if (p !== other)\n        return polygonInPolygon(p, other); \n    })\n\n    let area = 0\n\n    for (let poly of polygons) {\n      if (isHole(poly))\n        area -= polygonArea(poly);\n      else \n        area += polygonArea(poly);\n    }\n\n    return area;\n  }\n}","import { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, r) to the SVG shape **/\nconst setXYR = (shape, x, y, r) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', r);\n}\n\n/** \n * Draws an SVG circle, either from an annotation, or an\n * (cx, cy, r)-tuple.\n */\nexport const drawCircle = (cx, cy, r) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const outerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n  const innerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n  innerCircle.setAttribute('class', 'a9s-inner');\n  setXYR(innerCircle, cx, cy, r);\n\n  outerCircle.setAttribute('class', 'a9s-outer');\n  setXYR(outerCircle, cx, cy, r);\n\n  g.appendChild(outerCircle);\n  g.appendChild(innerCircle);\n\n  return g;\n}\n\nexport const setCircleSize = (g, cx, cy, r) => {\n  const innerCircle = g.querySelector('.a9s-inner');\n  const outerCircle = g.querySelector('.a9s-outer');\n  \n  setXYR(innerCircle, cx, cy, r);\n  setXYR(outerCircle, cx, cy, r);\n}\n\nexport const getCircleSize = g => {\n  const outerCircle = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerCircle.getAttribute('cx'));\n  const cy = parseFloat(outerCircle.getAttribute('cy'));\n  const r = parseFloat(outerCircle.getAttribute('r'));\n  \n  return { cx, cy, r };\n}","import { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport { getCircleSize } from './Circle';\n\nexport default class CircleMask {\n\n  constructor(imageDimensions, circle) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.circle = circle;\n\n    const { cx, cy, r } = getCircleSize(this.circle);\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@abramzog/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@abramzog/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport { drawCircle, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * A 'rubberband' selection tool for creating a circle by\n * clicking and dragging.\n */\nexport default class RubberbandCircle {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawCircle(anchorX, anchorY, 2);\n    this.circle.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.circle);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.circle);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.circle;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    const { naturalWidth, naturalHeight } = this.env.image;\n\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n    const r = Math.max(1, Math.pow(w ** 2 + h ** 2, 0.5) / 2);\n\n    const cx = this.anchor[0] + w / 2;\n    const cy = this.anchor[1] + h / 2;\n\n    if ((cx-r < 0 || cx + r > naturalWidth) || (cy-r < 0 || cy + r > naturalHeight)) return;\n    \n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.circle.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.circle = null;\n    this.group = null;\n  }\n\n}","import { addClass, SVG_NAMESPACE } from './SVG';\n\nconst isFirefox = /firefox/i.test(navigator.userAgent);\n\nconst formatSvgEl = (svgEl, x, y, w, h) => {\n  svgEl.setAttribute('width', w);\n  svgEl.setAttribute('height', h);\n\n  // Argh - Firefox produces broken SVG bounds for nested SVG\n  if (isFirefox) {\n    svgEl.setAttribute('x', 0);\n    svgEl.setAttribute('y', 0);\n    svgEl.setAttribute('transform', `translate(${x}, ${y})`);  \n  } else {\n    svgEl.setAttribute('x', x);\n    svgEl.setAttribute('y', y);\n  }\n}\n\nconst appendFormatterEl = (formatterEl, shape) => {\n  const { x, y, width, height } = shape.getBBox();\n\n  const svgEl = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svgEl.setAttribute('class', 'a9s-formatter-el');\n\n  formatSvgEl(svgEl, x, y, width, height);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.appendChild(formatterEl);y\n\n  svgEl.appendChild(g);\n  \n  shape.append(svgEl);\n}\n\n/**\n * A formatter is a user-defined function that takes an annotation as input,\n * and returns either a string, or an object. If a string is returned, this\n * will be appended to the annotation element CSS class list. Otherwise, the\n * object can have the following properties: \n * \n * - 'className' added to the CSS class list\n * - 'data-*' added as data attributes\n * - 'style' a list of CSS styles (in the form of a string) \n */\nexport const format = (shape, annotation, formatters) => {\n  // The formatter can be undefined\n  if (!formatters)\n    return shape;\n\n  // Merge outputs from all formatter functions into one object\n  const format = formatters.reduce((merged, fn) => {\n    const format = fn(annotation);\n\n    if (!format)\n      return merged;\n\n    if (typeof format === 'string' || format instanceof String) {\n      merged.className = merged.className ? `${merged.className} ${format}` : format; \n    } else if (format.nodeType === Node.ELEMENT_NODE) {\n      merged.elements = merged.elements ? [...merged.elements, format] : [format];\n    } else {\n      const { className, style, element } = format;\n\n      if (className)\n        merged.className = merged.className ? `${merged.className} ${className}` : className;\n\n      if (style)\n        merged.style = merged.style ? `${merged.style} ${style}` : style;\n\n      if (element)\n        merged.elements = merged.elements ? [...merged.elements, element] : [element];\n    }\n\n    // Copy data attributes\n    for (const key in format) {\n      if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n        merged[key] = format[key];\n      }\n    }\n\n    return merged;\n  }, {});\n\n  const { className, style, elements } = format;\n\n  if (className)\n    addClass(shape, className);\n\n  if (style) {\n    const outer = shape.querySelector('.a9s-outer');\n    const inner = shape.querySelector('.a9s-inner');\n\n    if (outer && inner) {\n      outer.setAttribute('style', 'display:none');\n      inner.setAttribute('style', style);\n    } else {\n      shape.setAttribute('style', style);\n    }\n  }\n\n  if (elements)\n    elements.forEach(el => appendFormatterEl(el, shape));\n\n  for (const key in format) {\n    if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n      shape.setAttribute(key, format[key]);\n    }\n  }\n}\n\nexport const setFormatterElSize = (group, x, y, w, h) => {\n  const formatterEl = group.querySelector('.a9s-formatter-el');\n  if (formatterEl)\n    formatSvgEl(formatterEl, x, y, w, h);\n}","import EditableShape from '@abramzog/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@abramzog/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@abramzog/annotorious/src/util/Formatting';\nimport { getCircleSize, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * An editable circle shape.\n */\nexport default class EditableCircle extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <circle class=\"a9s-outer\" ... />\n    //     <circle class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable circle compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawEmbeddedSVG(annotation);\n    this.circle.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.circle));\n\n    this.mask = new Mask(env.image, this.circle);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = circle + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.circle);    \n\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    this.handles = [\n      [ cx, cy - r ],\n      [ cx + r, cy ],\n      [ cx, cy + r ],\n      [ cx - r, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.circle, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, r) => {\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - r);\n    this.setHandleXY(topright, cx + r, cy);\n    this.setHandleXY(bottomright, cx, cy + r);\n    this.setHandleXY(bottomleft, cx - r, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var width = 0;\n    var height = 0;\n    var r;\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n      height = mouseY - anchor.y;\n      r = Math.abs(height) / 2;\n    } else {\n      mouseY = anchor.y;\n      width = mouseX - anchor.x;\n      r = Math.abs(width) / 2;\n    }\n\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - r);\n      this.setHandleXY(this.handles[idx2], cx, cy + r);\n      this.setHandleXY(this.handles[1], cx + r, cy);\n      this.setHandleXY(this.handles[3], cx - r, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + r, cy);\n      this.setHandleXY(this.handles[idx1], cx - r, cy);\n      this.setHandleXY(this.handles[0], cx, cy - r);\n      this.setHandleXY(this.handles[2], cx, cy + r);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n    \n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getCircleSize(this.circle);\n    \n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.circle) {\n        const { r } = getCircleSize(this.circle);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = Math.max(constrain(pos.x - this.grabbedAt.x, naturalWidth - r), r);\n        const cy = Math.max(constrain(pos.y - this.grabbedAt.y, naturalHeight - r), r);\n\n        this.setSize(cx, cy, r); \n        this.emit('update', toSVGTarget(this.circle, this.env.image)); \n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n        this.emit('update', toSVGTarget(this.circle, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  onScaleChanged = scale =>\n    this.handles.map(this.scaleHandle);\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const r =  parseFloat(shape.getAttribute('r'));\n\n    this.setSize(cx, cy, r);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@abramzog/annotorious/src/tools/Tool';\nimport RubberbandCircle from './RubberbandCircle';\nimport EditableCircle from './EditableCircle';\n\n/**\n * A rubberband selector for circle selections.\n */\nexport default class RubberbandCircleTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandCircle(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableCircle(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandCircleTool.identifier = 'circle';\n\nRubberbandCircleTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<circle/g);\n}","import { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, rx, ry) to the SVG shape **/\nconst setXYR = (shape, x, y, rx, ry) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('rx', rx);\n  shape.setAttribute('ry', ry);\n}\n\n/** \n * Draws an SVG ellipse, either from an annotation, or an\n * (cx, cy, rx, ry)-tuple.\n */\nexport const drawEllipse = (cx, cy, rx, ry) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const innerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n  const outerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n\n  innerEllipse.setAttribute('class', 'a9s-inner');\n  setXYR(innerEllipse, cx, cy, rx, ry);\n\n  outerEllipse.setAttribute('class', 'a9s-outer');\n  setXYR(outerEllipse, cx, cy, rx, ry);\n\n  g.appendChild(outerEllipse);\n  g.appendChild(innerEllipse);\n\n  return g;\n}\n\nexport const setEllipseSize = (g, cx, cy, rx, ry) => {\n  const innerEllipse = g.querySelector('.a9s-inner');\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  setXYR(innerEllipse, cx, cy, rx, ry);\n  setXYR(outerEllipse, cx, cy, rx, ry);\n}\n\nexport const getEllipseSize = g => {\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerEllipse.getAttribute('cx'));\n  const cy = parseFloat(outerEllipse.getAttribute('cy'));\n  const rx = parseFloat(outerEllipse.getAttribute('rx'));\n  const ry = parseFloat(outerEllipse.getAttribute('ry'));\n  \n  return { cx, cy, rx, ry };\n}","import { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport { getEllipseSize } from './Ellipse';\n\nexport default class EllipseMask {\n\n  constructor(imageDimensions, ellipse) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.ellipse = ellipse;\n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@abramzog/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@abramzog/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport { drawEllipse, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * A 'rubberband' selection tool for creating a ellipse by\n * clicking and dragging.\n */\nexport default class RubberbandEllipse {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEllipse(anchorX, anchorY, 2);\n    this.ellipse.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.ellipse);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.ellipse;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n\n    const cx = w > 0 ? this.anchor[0] + w / 2 : oppositeX + w / 2;\n    const cy = h > 0 ? this.anchor[1] + h / 2 : oppositeY + h / 2;\n\n    const rx = Math.abs(w / 2);\n    const ry = Math.abs(h / 2);\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.ellipse.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.ellipse = null;\n    this.group = null;\n  }\n\n}","import EditableShape from '@abramzog/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@abramzog/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@abramzog/annotorious/src/util/Formatting';\nimport { getEllipseSize, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * An editable ellipse shape.\n */\nexport default class EditableEllipse extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <ellipse class=\"a9s-outer\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable ellipse compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEmbeddedSVG(annotation);\n    this.ellipse.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.ellipse));\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = ellipse + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.ellipse);    \n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    this.handles = [\n      [ cx, cy - ry ],\n      [ cx + rx, cy ],\n      [ cx, cy + ry ],\n      [ cx - rx, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.ellipse, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, rx, ry) => {\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - ry);\n    this.setHandleXY(topright, cx + rx, cy);\n    this.setHandleXY(bottomright, cx, cy + ry);\n    this.setHandleXY(bottomleft, cx - rx, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, leftHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n    const anchorLeft = this.getHandleXY(leftHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var rx = 0;\n    var ry = 0;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n    } else {\n      mouseY = anchor.y;\n    }\n\n    const width = mouseX - anchor.x;\n    const height = mouseY - anchor.y;\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n    var rx = w/2;\n    var ry = h/2;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      rx = Math.abs(anchor.x - anchorLeft.x);\n    } else {\n      ry = Math.abs(anchor.y - anchorLeft.y);\n    }\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - ry);\n      this.setHandleXY(this.handles[idx2], cx, cy + ry);\n      this.setHandleXY(this.handles[1], cx + rx, cy);\n      this.setHandleXY(this.handles[3], cx - rx, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + rx, cy);\n      this.setHandleXY(this.handles[idx1], cx - rx, cy);\n      this.setHandleXY(this.handles[0], cx, cy - ry);\n      this.setHandleXY(this.handles[2], cx, cy + ry);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n\n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getEllipseSize(this.ellipse);\n\n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.ellipse) {\n        const { rx, ry } = getEllipseSize(this.ellipse);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = constrain(pos.x - this.grabbedAt.x, naturalWidth - rx);\n        const cy = constrain(pos.y - this.grabbedAt.y, naturalHeight - ry);\n\n        this.setSize(cx, cy, rx, ry); \n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n        const leftHandle = this.handles[(handleIdx + 3) % 4];\n\n        this.stretchCorners(handleIdx, oppositeHandle, leftHandle, pos);\n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  onScaleChanged = scale =>\n    this.handles.map(this.scaleHandle);\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const rx = parseFloat(shape.getAttribute('rx'));\n    const ry = parseFloat(shape.getAttribute('ry'));\n    \n    this.setSize(cx, cy, rx, ry);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}","import Tool from '@abramzog/annotorious/src/tools/Tool';\nimport RubberbandEllipse from './RubberbandEllipse';\nimport EditableEllipse from './EditableEllipse';\n\n/**\n * A rubberband selector for ellipse selections.\n */\nexport default class RubberbandEllipseTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandEllipse(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableEllipse(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandEllipseTool.identifier = 'ellipse';\n\nRubberbandEllipseTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<ellipse/g);\n}","import { Selection } from '@abramzog/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@abramzog/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\n/**\n * A 'rubberband' selection tool for creating freehand drawing by\n * clicking and dragging.\n */\nexport default class RubberbandFreehand {\n\n  constructor(anchor, g, env) {\n    this.points = [ anchor ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.freehand = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.freehand.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.freehand.appendChild(this.outer);\n    this.freehand.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n   // TODO optional: mask to dim the outside area\n   // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.freehand);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var str = points.map(pt => `L${pt[0]} ${pt[1]}`).join(' ');\n    str = 'M' + str.substring(1);\n    this.outer.setAttribute('d', str);\n    this.inner.setAttribute('d', str);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n\n    //TODO optional: edge smoothing\n\n    this.addPoint(xy);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  addPoint = xy => {\n    this.points = [ ...this.points, xy ];\n    this.setPoints(this.points);   \n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  get element() {\n    return this.freehand;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.freehand = null;    \n    this.group = null;\n  }\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","import EditableShape from '@abramzog/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@abramzog/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@abramzog/annotorious/src/util/Formatting';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\nconst getPoints = shape => {\n  const pointList = shape.getAttribute('d').split('L');\n  const points = [];\n  if(pointList.length > 0) {\n    var point = pointList[0].substring(1).trim().split(' ');\n    points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n\n    for (let i = 1; i < pointList.length; i++) {\n      var point = pointList[i].trim().split(' ');\n      points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n    }\n  }\n\n  return points;\n}\n\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\n\n/**\n * An editable freehand drawing.\n */\nexport default class EditableFreehand extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    const round = num => Math.round(10 * num) / 10;\n\n    var str = points.map(pt => `L${round(pt.x)} ${round(pt.y)}`).join(' ');\n    str = 'M' + str.substring(1);\n\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    const { x, y, width, height } = outer.getBBox();\n\n    // TODO optional: mask to dim the outside area\n    // this.mask.redraw();\n\n    // TODO optional: handles to stretch the shape\n/*    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n\n    this.setHandleXY(topleft, x, y);\n    this.setHandleXY(topright, x + width, y);\n    this.setHandleXY(bottomright, x + width, y + height);\n    this.setHandleXY(bottomleft, x, y + height);*/\n\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      const { x, y, width, height } = getBBox(this.shape);\n\n      if (this.grabbedElem === this.shape) {\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const inner = this.shape.querySelector('.a9s-inner');\n        const updatedPoints = getPoints(inner).map(pt => ({ x: pt.x + dx, y: pt.y + dy }));\n\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n      // TODO optional: handles to stretch the shape\n      /* else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }*/\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@abramzog/annotorious/src/tools/Tool';\nimport RubberbandFreehand from './RubberbandFreehand';\nimport EditableFreehand from './EditableFreehand';\n\n/**\n * A rubberband selector for freehand fragments.\n */\nexport default class RubberbandFreehandTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandFreehand([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y) => {\n    this.onDblClick(x, y);\n  }\n\n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    this.detachListeners();\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth || height >= minHeight) {\n\n      const shape = this.rubberband.element;\n      shape.annotation = this.rubberband.toSelection();\n\n      this.emit('complete', shape);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation =>\n    new EditableFreehand(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandFreehandTool.identifier = 'freehand';\n\nRubberbandFreehandTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return (selector.value.match(/^<svg.*<path*/g) && !selector.value.toUpperCase().includes('Z'));\n}","import { SVG_NAMESPACE } from '../../util/SVG';\n\nexport default class PolygonMask {\n\n  constructor(imageDimensions, polygon) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.polygon = polygon;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${this.polygon.getAttribute('points')} z`);\n  }\n\n  redraw = () => {\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${this.polygon.getAttribute('points')} z`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@abramzog/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@abramzog/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport Mask from '@abramzog/annotorious/src/tools/polygon/PolygonMask';\n\n// TODO optional: mask to dim the outside area\n//import Mask from './multipolygonMask';\n\n/**\n * A 'rubberband' selection tool for creating multipolygon drawing by\n * clicking and dragging.\n */\nexport default class RubberbandMultipolygon {\n\n  constructor(anchor, g, env) {\n    this.points =  [];\n    this.points.push([ anchor, anchor ])\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.multipolygon = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.multipolygon.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n    this.mask = new Mask(env.image, this.inner);\n\n    // TODO optional: mask to dim the outside area\n    // this.mask = new Mask(env.image, this.inner);\n\n    this.multipolygon.appendChild(this.outer);\n    this.multipolygon.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    // TODO optional: mask to dim the outside area\n    // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.multipolygon);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var attr =\"\";\n\n    for (var ps of points){\n      var attr2=\"\"\n      if (ps.length>0){\n        for (var p of ps) {\n          if (p){\n            if (attr2===\"\"){\n              attr2  +=`M${p[0]},${p[1]}`;\n            }\n            else{\n              attr2  +=` L${p[0]},${p[1]}`;\n            }\n          }\n        };\n         attr+=attr2\n      }\n    }\n\n    attr+=\" Z\"\n    \n    this.outer.setAttribute('d', attr);\n    this.inner.setAttribute('d', attr);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n    const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n    var headRest=this.points.slice(0,-1)\n    const rubberband = [ ...head, xy, head[0] ];\n    headRest.push(rubberband)\n    this.setPoints(headRest);\n    this.mask.redraw();\n  }\n  \n  addPoint = xy => {\n    // Don't add a new point if distance < 2 pixels\n    if (this.points[this.points.length - 1].length>0){\n      const head = this.points[this.points.length - 1].slice(0, this.points[this.points.length - 1].length - 1);\n      const lastCorner = head[head.length - 1];\n      const dist = Math.pow(xy[0] - lastCorner[0], 2) + Math.pow(xy[1] - lastCorner[1], 2);\n      if (dist > 4) {\n        this.points[this.points.length - 1] = [ ...head, xy, head[0] ];\n        this.setPoints(this.points);   \n        this.mask.redraw();\n      } \n    } else{\n      this.points[this.points.length - 1] = [xy,xy];\n      this.setPoints(this.points);\n    }\n  }\n\n  undo = () => {\n    if (this.points[this.points.length - 1].length>2){\n      this.points[this.points.length - 1].pop();\n    } else {\n      if (this.points.length>1){\n        this.points.pop()\n      }\n    }\n  }\n\n  newPart = () => {\n    this.points.push([]);\n  }\n \n  get element() {\n    return this.multipolygon;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.multipolygon = null;    \n    this.group = null;\n  }\n\n  toSelection = () =>\n    new Selection({\n      ...toSVGTarget(this.group, this.env.image),\n      renderedVia: {\n        name: 'multipolygon'\n      }\n    });\n\n}\n","import EditableShape from '@abramzog/annotorious/src/tools/EditableShape';\nimport { svgFragmentToShape, toSVGTarget } from '@abramzog/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@abramzog/annotorious/src/util/Formatting';\n\n// TODO optional: mask to dim the outside area\n//import Mask from './MultipolygonMask';\n\nconst getPoints = (shape) => {\n  // Could just be Array.from(shape.querySelector('.inner').points) but...\n  // IE11 :-(\n  const pointLists = getPointsFromPathValue(shape.querySelector('.a9s-inner').attributes.d.nodeValue)\n  const pointArray = [];\n  for (let pointList of pointLists) {\n    let points = []\n    for (let point of pointList) {\n      let p = {\n        x:parseFloat(point[0]),\n        y:parseFloat(point[1])\n      }\n      points.push(p);\n    }\n    pointArray.push(points);\n  }\n\n  return pointArray;\n}\nconst getPointsFromPathValue = polygon => {\n  var results =polygon.split('M');\n  var allcoords = []\n  results.forEach(function (result, index) {\n    if (result.length>0){\n      let coords = []\n      result=result.replace(/ Z/g,\"Z\")\n      result=result.replace(/Z /g,\"Z\")\n      result=result.replace(/Z/g,\"\")\n      result=result.replace(/L /g,\"L\")\n      result=result.replace(/ L/g,\"L\")\n      var coordsString = result.split(\"L\")\n      coordsString.forEach(function(coord, index){\n        coords.push([parseFloat(coord.split(\",\")[0]).toFixed(2).toString(),parseFloat(coord.split(\",\")[1]).toFixed(2).toString()]);\n      });\n      if (coords[0] !== coords[coords.length - 1]){\n        coords.push(coords[0])\n      }\n      allcoords.push(coords)\n    }\n  });\n  return allcoords\n}\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\nexport const svgFragmentToPoints = annotation => {\n  const svgShape = svgFragmentToShape(annotation);\n  var polygon = svgShape.getAttribute('d')\n  var allcoords =  getPointsFromPathValue(polygon)\n  return allcoords\n  //svgShape.getAttribute('d')\n  //  .split(' ') // Split x/y tuples\n  //  .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n}\n\nconst drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Hack\n  svgFragmentToPoints(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n/**\n * An editable multipolygon drawing.\n */\nexport default class EditableMultipolygon extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n    let pointList = getPoints(this.shape);\n    this.handles = []\n    for (let points of pointList){\n      this.handles.push(points.map(pt => {\n        const handle = this.drawHandle(pt.x, pt.y);\n        handle.addEventListener('mousedown', this.onGrab(handle));\n        this.elementGroup.appendChild(handle);\n        return handle;\n      }))\n    } \n\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    const round = num =>\n    Math.round(10 * num) / 10;\n\n    let str = \"\"\n    for (let pointList of points){\n      str += \"M\"\n      let first = true \n      for (let point of pointList){\n        if (first){\n          first = false\n          str += point.x.toString() + \",\" + point.y.toString()\n        } else {\n          str += \" L\" + round(point.x).toString() + \",\" + round(point.y).toString()\n        }\n      }\n      str += \" Z\"\n    }\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    // this.mask.redraw();\n\n    const { x, y, width, height } = outer.getBBox();\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    if (this.grabbedElem) {\n\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.shape) {\n        const dx = pos.x - this.grabbedAt.x;\n        const dy = pos.y - this.grabbedAt.y;\n\n        let pointList = getPoints(this.shape)\n\n        const updatedPoints = []\n        for (let points of pointList){\n          updatedPoints.push(points.map(pt =>\n            ({ x: pt.x + dx, y: pt.y + dy })))\n        } \n    \n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n        let i = 0\n        for (let updatedPointsList of updatedPoints){\n            updatedPointsList.forEach((pt, idx) => { \n              if (this.handles[i][idx] !== undefined)\n                this.setHandleXY(this.handles[i][idx], pt.x, pt.y)\n            });\n            i+=1\n        }\n        \n        this.emit('update', {\n          ...toSVGTarget(this.shape, this.env.image),\n          renderedVia: {\n            name: 'multipolygon'\n          }\n        });\n      } else {\n        let handleIdx = -1\n        let pointListIDX = 0\n        let found = false\n\n        for (let handle of this.handles){\n          if (handle.indexOf(this.grabbedElem)>0){\n            handleIdx = handle.indexOf(this.grabbedElem);\n            found=true\n          } else {\n            if (!found){\n              pointListIDX += 1\n            }\n          }\n        }\n  \n        let pointList = getPoints(this.shape)\n  \n        const updatedPoints = []\n        let updatedPointsIDX = 0\n        for (let points of pointList){\n          if (updatedPointsIDX === pointListIDX){\n            let newPoints = []\n            points.forEach(function (value, i) {\n              if (i === handleIdx){\n                newPoints.push(pos)\n              } else {\n                newPoints.push(value)\n              }\n            });\n            updatedPoints.push(newPoints)\n          } else {\n            updatedPoints.push(points)\n          }\n          updatedPointsIDX +=1\n        } \n       \n        this.setPoints(updatedPoints);\n        updatedPointsIDX = 0\n        for (let handle of this.handles){\n          if (updatedPointsIDX === pointListIDX){\n\n            this.setHandleXY(handle[handleIdx], pos.x, pos.y);\n          }\n          updatedPointsIDX +=1\n\n        }\n        \n        this.emit('update', {\n          ...toSVGTarget(this.shape, this.env.image),\n          renderedVia: {\n            name: 'multipolygon'\n          }\n        });\n      }\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@abramzog/annotorious/src/tools/Tool';\nimport RubberbandMultipolygon from './RubberbandMultipolygon';\nimport EditableMultipolygon from './EditableMultipolygon';\n\n/**\n * A rubberband selector for Multipolygon fragments.\n */\nexport default class RubberbandMultipolygonTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n    \n    document.addEventListener('keydown', evt => {\n      if (evt.key == \"z\" && evt.ctrlKey) {\n        this.undo();\n      }\n      \n      if (evt.key == 'n') {\n        this.newPart();\n      }\n    });  \n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandMultipolygon([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n  undo = () =>{\n    if (this.rubberband){\n      this.rubberband.undo();\n\n    }\n  }\n  newPart = () =>{\n    if (this.rubberband){\n      this.rubberband.newPart();\n\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y, evt) => {\n    if (evt.altKey){\n      this.onDblClick(evt);\n    } else if (evt.ctrlKey) {\n      this.rubberband.undo();\n    } else{\n      const { width, height } = this.rubberband.getBoundingClientRect();\n\n      const minWidth = this.config.minSelectionWidth || 4;\n      const minHeight = this.config.minSelectionHeight || 4;\n      \n      if (width >= minWidth || height >= minHeight) {\n        this.rubberband.addPoint([ x, y ]);\n      } else {\n        this.emit('cancel');\n        this.stop();\n      }\n    }\n  }\n  \n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    const shape = this.rubberband.element;\n    shape.annotation = this.rubberband.toSelection();\n    this.emit('complete', shape);\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation => \n    new EditableMultipolygon(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandMultipolygonTool.identifier = 'multipolygon';\n\nRubberbandMultipolygonTool.supports = annotation => false;","import { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\n\nexport default class LineMask {\n\n  constructor(imageDimensions, line) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.line = line;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');\n    this.mask.setAttribute('class', 'a9s-selection-mask');\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${this.line.getAttribute('x1')} ${this.line.getAttribute('y1')} z`);\n  }\n\n  redraw = () => {\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${this.line.getAttribute('x1')} ${this.line.getAttribute('y1')} ${this.line.getAttribute('x2')} ${this.line.getAttribute('y2')}z`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@abramzog/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@abramzog/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport Mask from './LineMask';\n\n\n/**\n * A 'rubberband' selection tool for creating Line drawing by\n * clicking and dragging.\n */\nexport default class RubberbandLine {\n\n  constructor(anchor, g, env) {\n    this.points =  anchor\n    //this.points.push([ anchor, anchor ])\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.Line = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.Line.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'line');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'line');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n    this.mask = new Mask(env.image, this.inner);\n\n    // TODO optional: mask to dim the outside area\n    // this.mask = new Mask(env.image, this.inner);\n\n    this.Line.appendChild(this.outer);\n    this.Line.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    // TODO optional: mask to dim the outside area\n    // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.Line);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    const attr = points;\n    // set attribute for line svg element for outer and inner\n    // example: <line x1=\"0\" y1=\"80\" x2=\"100\" y2=\"20\" stroke=\"black\" />\n    this.outer.setAttribute('x1', attr[0]);\n    this.inner.setAttribute('x1', attr[0]);\n    this.outer.setAttribute('y1', attr[1]);\n    this.inner.setAttribute('y1', attr[1]);\n    if(attr.length > 2) {\n    this.outer.setAttribute('x2', attr[2]);\n    this.inner.setAttribute('x2', attr[2]);\n    this.outer.setAttribute('y2', attr[3]);\n    this.inner.setAttribute('y2', attr[3]);\n    }\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n\n    this.mousepos = xy;\n    //console.log(xy);\n    const rubberband = [ ...this.points, xy[0], xy[1] ];\n    \n    this.setPoints(rubberband);\n    this.mask.redraw();\n  }\n  \n  addPoint = xy => {\n    // Don't add a new point if distance < 2 pixels\n    if (this.points.length <= 2) {\n      this.points[2] = xy[0];\n      this.points[3] = xy[1];\n      this.setPoints(this.points);\n    }\n  }\n\n  undo = () => {\n    if (this.points[this.points.length - 1].length>2){\n      this.points[this.points.length - 1].pop();\n    } else {\n      if (this.points.length>1){\n        this.points.pop()\n      }\n    }\n  }\n\n  newPart = () => {\n    this.points.push([]);\n  }\n \n  get element() {\n    return this.Line;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.Line = null;    \n    this.group = null;\n  }\n\n  toSelection = () =>\n    new Selection({\n      ...toSVGTarget(this.group, this.env.image),\n      renderedVia: {\n        name: 'line'\n      }\n    });\n\n}\n","import EditableShape from '@abramzog/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@abramzog/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@abramzog/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@abramzog/annotorious/src/util/Formatting';\nimport Mask from './LineMask';\n\nconst getPoints = shape => {\n  // Could just be Array.from(shape.querySelector('.inner').points) but...\n  // IE11 :-(\n  const innerElement = shape.querySelector('.a9s-inner');\n  const points = [\n    [innerElement.x1.baseVal, innerElement.y1.baseVal],\n    [innerElement.x2.baseVal, innerElement.y2.baseVal]\n  ];\n\n  return points;\n}\n\nconst getBBox = shape =>\n  shape.querySelector('.a9s-inner').getBBox();\n\n/**\n * An editable line shape.\n */\nexport default class EditableLine extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    //\n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <line class=\"a9s-outer\" ... />\n    //     <line class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g>\n    // </g>\n\n    // 'g' for the editable line shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.setAttribute('data-id', annotation.id);\n    this.elementGroup.appendChild(this.shape);\n\n    this.handles = getPoints(this.shape).map(pt => {\n      const handle = this.drawHandle(pt[0].value, pt[1].value);\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatters);\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  onScaleChanged = () => \n    this.handles.map(this.scaleHandle);\n\n  setPoints = (points) => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    const round = num =>\n      Math.round(10 * num) / 10;\n\n    var x1 = points[0].x;\n    var y1 = points[0].y;\n    var x2 = points[1].x;\n    var y2 = points[1].y;\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('x1', x1);\n    inner.setAttribute('y1', y1);\n    inner.setAttribute('x2', x2);\n    inner.setAttribute('y2', y2);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('x1', x1);\n    outer.setAttribute('y1', y1);\n    outer.setAttribute('x2', x2);\n    outer.setAttribute('y2', y2);\n\n    this.mask.redraw();\n\n    const { x, y, width, height } = outer.getBBox();\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n  onGrab = grabbedElem => evt => {\n    if (evt.button !== 0) return;  // left click\n    this.grabbedElem = grabbedElem;\n    this.grabbedAt = this.getSVGPoint(evt);\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n      if (this.grabbedElem === this.shape) {\n        const { x, y, width, height } = getBBox(this.shape);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const updatedPoints = getPoints(this.shape).map(pt =>\n          ({ x: pt[0].value + dx, y: pt[1].value + dy }));\n\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n        updatedPoints.forEach((pt, idx) => this.setHandleXY(this.handles[idx], pt.x, pt.y));\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      } else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n\n        const updatedPoints = getPoints(this.shape).map((pt, idx) =>\n          (idx === handleIdx) ? pos : {'x':pt[0].value, 'y':pt[1].value});\n\n        this.setPoints(updatedPoints);\n        this.setHandleXY(this.handles[handleIdx], pos.x, pos.y);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  // TODO: update this for line svg Attributes, currently not being used\n  updateState = annotation => {\n    const points = svgFragmentToShape(annotation)\n      .getAttribute('points')\n      .split(' ') // Split x/y tuples\n      .map(xy => { \n        const [ x, y ] = xy.split(',').map(str => parseFloat(str.trim()));\n        return { x, y };\n      });\n    \n    this.setPoints(points);\n    points.forEach((pt, idx) => this.setHandleXY(this.handles[idx], pt.x, pt.y));\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@abramzog/annotorious/src/tools/Tool';\nimport RubberbandLine from './RubberbandLine';\nimport EditableLine from './EditableLine';\n\n/**\n * A rubberband selector for Line fragments.\n */\nexport default class RubberbandLineTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n    \n    document.addEventListener('keydown', evt => {\n      if (evt.key == \"z\" && evt.ctrlKey) {\n        this.undo();\n      }\n      \n      if (evt.key == 'n') {\n        this.newPart();\n      }\n    });  \n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n    });\n    \n    this.rubberband = new RubberbandLine([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n  undo = () =>{\n    if (this.rubberband){\n      this.rubberband.undo();\n\n    }\n  }\n  newPart = () =>{\n    if (this.rubberband){\n      this.rubberband.newPart();\n\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y, evt) => {\n    if (evt.altKey){\n      this.onDblClick(evt);\n    } else if (evt.ctrlKey) {\n      this.rubberband.undo();\n    } else{\n      // TODO: see when this is useful\n      // const { width, height } = this.rubberband.getBoundingClientRect();\n\n      // const minWidth = this.config.minSelectionWidth || 4;\n      // const minHeight = this.config.minSelectionHeight || 4;\n      \n      if (this.rubberband.points.length == 2) {\n        this.rubberband.addPoint([ x, y ]); \n        // check if both coordinates are same\n        if (this.rubberband.points[0] == this.rubberband.points[2] && this.rubberband.points[1] == this.rubberband.points[3]) {\n          this.emit('cancel');\n          this.stop();\n        }\n        else{\n          this._isDrawing = false;\n          const shape = this.rubberband.element;\n          shape.annotation = this.rubberband.toSelection();\n          this.emit('complete', shape);\n          this.stop();\n        }\n      }\n    }\n  }\n  \n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation => \n    new EditableLine(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandLineTool.identifier = 'line';\n\nRubberbandLineTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<line/g);\n}","import PointTool from './point/PointTool';\nimport RubberbandCircleTool from './circle/RubberbandCircleTool';\nimport RubberbandEllipseTool from './ellipse/RubberbandEllipseTool';\nimport RubberbandFreehandTool from './freehand/RubberbandFreehandTool';\nimport RubberbandMultipolygonTool from './multipolygon/RubberbandMultipolygonTool';\nimport RubberbandLineTool from './line/RubberbandLineTool';\n\nconst ALL_TOOLS = new Set([\n  'point',\n  'circle',\n  'ellipse',\n  'freehand',\n  'line',\n  // 'multipolygon' // exclude from defaults for now\n]);\n\nconst SelectorPack = (anno, config) => {\n\n  // Add configured tools, or all\n  const tools = config?.tools ? \n    config.tools.map(t => t.toLowerCase()) : ALL_TOOLS;\n\n  tools.forEach(tool => {\n    if (tool === 'point')\n      anno.addDrawingTool(PointTool);\n\n    if (tool === 'circle')\n      anno.addDrawingTool(RubberbandCircleTool);\n\n    if (tool === 'ellipse')\n      anno.addDrawingTool(RubberbandEllipseTool);\n  \n    if (tool === 'freehand')\n      anno.addDrawingTool(RubberbandFreehandTool);\n\n    if (tool === 'multipolygon')\n      anno.addDrawingTool(RubberbandMultipolygonTool);\n\n    if (tool === 'line')\n      anno.addDrawingTool(RubberbandLineTool);\n  });\n\n}\n\nexport default SelectorPack;\n"],"names":["root","factory","exports","module","define","amd","self","_typeof","obj","Symbol","iterator","constructor","prototype","equal","a","b","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","toString","hasOwnProperty","call","key","E","on","name","callback","ctx","e","this","push","fn","once","listener","off","apply","arguments","_","emit","data","slice","evtArr","len","evts","liveEvents","TinyEmitter","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","prop","getRandomValues","SVG_NAMESPACE","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","byteToHex","substr","arr","offset","uuid","toLowerCase","REGEX","test","validate","TypeError","options","buf","rnds","random","stringify","WebAnnotation","annotation","opts","_this","_classCallCheck","_defineProperty","opt_props","opt_opts","_objectSpread","underlying","type","target","selector","find","s","value","other","id","equals","_this$opts","readOnly","motivation","body","set","bodies","_this$selector","exact","_this$selector2","start","_this$selector3","end","args","stub","concat","Selection","cloned","JSON","parse","assign","IMPLEMENTATION_MISSING","isTouch","window","navigator","maxTouchPoints","msMaxTouchPoints","ToolLike","_EventEmitter","_inherits","_super","_createSuper","g","config","env","_assertThisInitialized","ResizeObserver","resizeObserver","svgBounds","svg","getBoundingClientRect","_this$svg$viewBox$bas","viewBox","baseVal","width","height","scale","Math","max","onScaleChanged","observe","parentNode","evt","pt","createSVGPoint","bbox","x","clientX","y","clientY","_this$svg$getBounding","left","top","matrixTransform","getScreenCTM","inverse","offsetX","offsetY","getCTM","containerGroup","document","createElementNS","setAttribute","group","drawCircle","r","c","radius","handleRadius","inner","outer","appendChild","handle","querySelector","parseFloat","getAttribute","closest","image","Element","HTMLDocument","enableResponsive","_createClass","disconnect","EventEmitter","Tool","_ToolLike","_super2","_this2","_ref","mouseMove","mouseUp","dblClick","_this2$getSVGPoint","getSVGPoint","started","addEventListener","button","_this2$getSVGPoint2","_this2$getSVGPoint3","removeEventListener","startOnSingleClick","_this2$getSVGPoint4","startDrawing","formatters","supports","EditableShape","parseRectFragment","conformsTo","startsWith","format","includes","substring","indexOf","_coords$split$map2","_slicedToArray","split","map","w","h","naturalWidth","naturalHeight","toFragment","fragmentUnit","px","py","pw","ph","src","toPercentRectFragment","toPixelRectFragment","toRectFragment","renderedVia","EditablePoint","_EditableShape","scaleHandle","point","isGrabbed","_this$getSVGPoint","setHandleXY","_parseRectFragment","onMouseMove","onMouseUp","_parseRectFragment2","container","elementGroup","drawHandle","onGrab","removeChild","_get","_getPrototypeOf","PointTool","_Tool","_evt$target$closest","_annotation$target$re","isPoint","element","identifier","sanitize","doc","cleanEl","el","from","attributes","forEach","attr","removeAttribute","scripts","getElementsByTagName","reverse","querySelectorAll","svgFragmentToShape","originalDoc","namespaced","parser","DOMParser","parseFromString","isPrefixDeclared","lookupPrefix","isDefaultNamespaceSVG","lookupNamespaceURI","firstChild","XMLSerializer","serializeToString","documentElement","replace","drawEmbeddedSVG","shape","cloneNode","toSVGTarget","serialized","outerHTML","setXYR","setCircleSize","cx","cy","innerCircle","outerCircle","getCircleSize","CircleMask","imageDimensions","circle","_getCircleSize","tx","ty","mask","_getCircleSize2","RubberbandCircle","anchorX","anchorY","oppositeX","oppositeY","_this$env$image","style","display","anchor","pow","redraw","Mask","pointerEvents","isFirefox","userAgent","formatSvgEl","svgEl","reduce","merged","String","className","nodeType","Node","ELEMENT_NODE","elements","_toConsumableArray","classNames","Set","getClassNames","add","join","addClass","formatterEl","_shape$getBBox","getBBox","append","appendFormatterEl","setFormatterElSize","EditableCircle","_this$handles","handles","topleft","topright","bottomright","bottomleft","draggedHandleIdx","anchorHandle","mousePos","getHandleXY","mouseX","mouseY","abs","idx0","idx2","idx3","idx1","grabbedElem","pos","grabbedAt","constrain","coord","setSize","handleIdx","oppositeHandle","stretchCorners","_getCircleSize3","t","_t","formatter","RubberbandCircleTool","attachListeners","rubberband","destroy","dragTo","detachListeners","_this$rubberband$getB","minWidth","minSelectionWidth","minHeight","minSelectionHeight","toSelection","stop","_selector$value","match","rx","ry","setEllipseSize","innerEllipse","outerEllipse","getEllipseSize","EllipseMask","ellipse","_getEllipseSize","_getEllipseSize2","RubberbandEllipse","drawEllipse","EditableEllipse","leftHandle","anchorLeft","_getEllipseSize3","RubberbandEllipseTool","RubberbandFreehand","points","str","xy","addPoint","setPoints","freehand","getPoints","pointList","trim","EditableFreehand","_thisSuper","round","num","_outer$getBBox","delta","_getBBox","dx","dy","updatedPoints","_getBBox2","RubberbandFreehandTool","_isDrawing","onDblClick","toUpperCase","PolygonMask","polygon","RubberbandMultipolygon","_step","_iterator","_createForOfIteratorHelper","done","ps","attr2","_step2","_iterator2","p","err","f","head","headRest","lastCorner","pop","multipolygon","pointArray","getPointsFromPathValue","nodeValue","results","allcoords","result","index","coords","toFixed","EditableMultipolygon","_step3","_iterator3","_step4","first","_iterator4","_step5","_iterator5","_i","_updatedPoints","idx","_step6","pointListIDX","found","_iterator6","_step7","updatedPointsIDX","_iterator7","_loop","newPoints","_step8","_iterator8","svgFragmentToPoints","_step9","_iterator9","RubberbandMultipolygonTool","undo","newPart","altKey","ctrlKey","LineMask","line","RubberbandLine","mousepos","Line","innerElement","x1","y1","x2","y2","EditableLine","_xy$split$map2","RubberbandLineTool","ALL_TOOLS","anno","tools","tool","addDrawingTool"],"sourceRoot":""}